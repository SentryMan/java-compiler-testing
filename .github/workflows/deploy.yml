name: Deploy a branch

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: "Dry run the deployment"
        default: true
        type: boolean

      skip-scm:
        description: "Skip tagging and release version update commits"
        default: false
        type: boolean

      skip-dependency-scan:
        description: "Skip dependency scan"
        default: false
        type: boolean

      skip-tests:
        description: "Skip tests"
        default: false
        type: boolean

      version:
        description: "Version (leave blank to release non-SNAPSHOT patch)"
        default: ""
        type: string

jobs:
  maven-central:
    name: "Maven Central"
    runs-on: ubuntu-22.04

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Initialize Java environment
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          # Must use >= JDK 17 for Javadocs to generate correctly.
          java-version: 17
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_TOKEN
          gpg-passphrase: GPG_PASSPHRASE
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Configure Git
        shell: bash
        run: |-
          source ./scripts/common.sh
          
          info "Applying Git user configuration"
          run <<SCRIPT
            git config user.name '${{ github.actor }}'
            git config user.email '${{ github.actor }}@users.noreply.github.com'
          SCRIPT

      - name: Perform release to Maven Central
        shell: bash
        run: |-
          source ./scripts/common.sh
          
          info "Determining release version to use (this may take a moment)..."
          if [ '${{ inputs.version }}' == "" ]; then
            release_version="$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//g')"
          else
            release_version='${{ inputs.version }}'
          fi
          
          success "Will use version ${release_version} for this release"
          
          info "Preparing and performing the release"
          ensure-set OSSRH_USERNAME OSSRH_TOKEN GPG_PASSPHRASE
          
          build_args=()
          if [[ '${{ inputs.skip-dependency-check }}' = 'false' ]]; then
            build_args+=("-P" "dependency-check")
          fi
          if [[ '${{ inputs.skip-tests }}' = 'true' ]]; then
            build_args+=("-Dmaven.test.skip" "-DskipTests")
          fi
          
          build_goals=()
          if [[ '${{ inputs.skip-scm }}' = 'true' ]]; then
            build_goals+=("release:update-versions")
          else
            build_goals+=("release:prepare")
          fi
          build_goals+=("release:perform")
          
          run <<-SCRIPT          
            ./mvnw -B -e \
                -P release \
                --no-transfer-progress \
                -Darguments='${build_args[@]}' \
                -DdryRun='${{ inputs.dry-run }}' \
                -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 \
                -Dpassword='${{ secrets.GITHUB_TOKEN }}' \
                -DreleaseVersion='${release_version}' \
                -DsignTag=false \
                -Dstyle.color=always \
                -Dtag='v${release_version}' \
                ${build_goals[@]}
          SCRIPT
          
          success "Release has been performed successfully"
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Upload JavaDocs as a build artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: java-compiler-testing/target/apidocs

  javadocs:
    name: "JavaDocs (GitHub Pages)"
    runs-on: ubuntu-22.04
    needs:
      - maven-central
    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy JavaDocs build artifact to GitHub Pages
        if: ${{ ! inputs.dry-run }}
        id: deployment
        uses: actions/deploy-pages@v1
